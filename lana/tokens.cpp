
#include "tokeniser.h"
#include "tokens.h"

lana::TokenRegistry tokens[] = {
    "*c=", T_EQUALS,
    "*c*", T_MUL,
    "*c+", T_ADD,
    "*c/", T_DIV,
    "*c-", T_SUB,
    "*c(", T_OPREN,
    "*c)", T_CPREN,
    "*c(", T_OPREN,
    "*c;", T_SEMI,
    "*c{", T_OCURLY,
    "*c}", T_CCURLY,
    "*c,", T_COMMA,
    "*c.", T_DOT,
    "*c~", T_NEAREQ,
    "*c!", T_PLING,
    "*c<", T_LT,
    "*c>", T_GT,
    "*c:", T_COLON,
    "*c#", T_COMMENT,
    "*c[", T_OSQB,
    "*c]", T_CSQB,
    "*c&", T_BITAND,
    "*c|", T_BITOR,
    "*c@", T_BITNOT,
    "*c^", T_XOR,
    "*c%", T_PERC,
    "*c`", T_BACKTICK,    

    "*e",		T_END,
    "*s",		T_STRING,
    "*i",		T_IDENT,
    "*n",		T_INT,
    "*f",		T_FLOAT,
    
    "if",		T_IF,
    "endif",		T_ENDIF,
    "else",		T_ELSE,
    "while",		T_WHILE,
    "endwhile",		T_ENDWHILE,
    "repeat",		T_REPEAT,
    "until",		T_UNTIL,
    "function",		T_FUNCTION,
    "return",		T_RETURN,
    "returns",		T_RETURNS,
    "end",		T_ENDFUNC,
    "elseif",		T_ELSEIF,
    "goto",		T_GOTO,
    "break",		T_BREAK,
    "continue",		T_CONTINUE,
    "true",		T_TRUE,
    "false",		T_FALSE,
    "this",		T_THIS,
    "for",		T_FOR,
    "in",		T_IN,
    "endfor",		T_ENDFOR,
    "procedure",	T_PROC,

    "load",		T_LOAD,
    "save",		T_SAVE,
    "savevar",		T_SAVEVAR,
    
    NULL, -10
};
